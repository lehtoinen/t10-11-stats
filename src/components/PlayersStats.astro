---
import { range } from 'ramda';
import { Player, WithTotals, teams } from '../types';

type Props = {
	players: (Player & WithTotals)[];
}

const {players} = Astro.props;
---

<table>
	<thead>
		<tr>
			<td></td>
			<th colspan="2">Yhteens√§</th>
			{
				teams.map(({ name }) => (
					<>
						<th colspan="2">{name}</th>
					</>
				))
			}
		</tr>
		<tr>
			<td/>
			{range(0, 4).map(() => <th>O</th><th>M</th>)}
		</tr>
	</thead>
	<tbody>
		{
			players.map((player) => (
				<tr>
					<td>{player.name}<div class="birthyear">{player.birthyear}</div></td>
					<td>{player.matches}</td>
					<td>{player.goals > 0 ? player.goals : ''}</td>
					{teams.map(({ id: teamId }) => {
						const stats = player?.[teamId];
						if (!stats) {
							return <td /><td />;
						}

						return (
								<td>{stats.matches}</td>
								<td>{stats.goals > 0 ? stats.goals : ""}</td>
						);
					})}
				</tr>
			))
		}
	</tbody>
</table>

<style>
  table {
    width: 100%;
    max-width: 40rem;
    font-size: 0.9rem;
    color: #333;
    border-spacing: 0;
  }

  tbody tr:nth-child(2n + 1) {
    background-color: #e9e9e9;
  }
  th,
  td {
    padding: 0.4rem;
    min-width: 2rem;
    border: 0;
    box-sizing: border-box;
  }
  td:not(:first-child) {
    text-align: center;
  }

  tr:nth-child(1) th:nth-child(1n + 3),
  tr:nth-child(2) th:nth-child(2n + 4),
  td:nth-child(2n + 4) {
    border-left: 1px solid darkgray;
  }

  tbody td:empty::before {
    content: "-";
    color: darkgray;
  }

  .birthyear {
    font-size: smaller;
    color: #777;
  }
</style>